package com.example.spring02_todolist.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.spring02_todolist.Spring02TodolistApplication;
import com.example.spring02_todolist.TodoDTO;
import com.example.spring02_todolist.entity.TodoEntity;
import com.example.spring02_todolist.repository.TodoReopsitory;


import lombok.extern.slf4j.Slf4j;


@Slf4j 
@Service
public class TodoServiceImpl implements TodoService{

  
	@Autowired
	private TodoReopsitory todoRepository;
	
	public TodoServiceImpl() {
		// TODO Auto-generated constructor stub
	}
	
	

	@Transactional(rollbackFor = Exception.class)
	@Override
	public void insert(TodoDTO dto) throws Exception {
		// TODO Auto-generated method stub
		TodoEntity insert = todoRepository.save(dto.ToEntity());
		log.info("insert=>{}",insert);
		
		// 예외 발생시 테스트용 코드 (주석 해제시 롤백확인 가능)
//		if(true) throw new Exception("강제 예외 발생");	
	}

	@Override
	public void update(TodoDTO dto) throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(int id) throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Transactional(readOnly = true)
	@Override
	public List<TodoDTO> search() throws Exception {
		// TODO Auto-generated method stub
		List<TodoEntity> listTodoEntity=todoRepository	.findAll();
		// stream(): 리스트를 스트림으로 변환하여 각 요소에 map()을 적용
	    // map(TodoDTO::toDTO): 각 TodoEntity를 TodoDTO로 변환 (정적 메서드 toDTO 사용)
	    // collect(Collectors.toList()): 변환된 요소들을 다시 리스트로 수집
		List<TodoDTO> listTodoDTO = listTodoEntity.stream()
				.map(TodoDTO :: toDTO)
				.collect(Collectors.toList());
		return listTodoDTO;
	}
	
	
	
	
	
	
	

}




//
